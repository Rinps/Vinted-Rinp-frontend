[{"/Users/guillaumeroger/LeReacteur/Vinted/vinted-frontend/src/App.js":"1","/Users/guillaumeroger/LeReacteur/Vinted/vinted-frontend/src/index.js":"2","/Users/guillaumeroger/LeReacteur/Vinted/vinted-frontend/src/pages/HomePage-components/Offer.js":"3","/Users/guillaumeroger/LeReacteur/Vinted/vinted-frontend/src/pages/Header.js":"4","/Users/guillaumeroger/LeReacteur/Vinted/vinted-frontend/src/pages/OfferPage.js":"5","/Users/guillaumeroger/LeReacteur/Vinted/vinted-frontend/src/pages/SignupPage.js":"6","/Users/guillaumeroger/LeReacteur/Vinted/vinted-frontend/src/pages/LoginPage.js":"7","/Users/guillaumeroger/LeReacteur/Vinted/vinted-frontend/src/pages/HomePage.js":"8","/Users/guillaumeroger/LeReacteur/Vinted/vinted-frontend/src/pages/PublishPage.js":"9","/Users/guillaumeroger/LeReacteur/Vinted/vinted-frontend/src/pages/PaymentPage.js":"10"},{"size":3707,"mtime":1616253633974,"results":"11","hashOfConfig":"12"},{"size":219,"mtime":1610886057877,"results":"13","hashOfConfig":"12"},{"size":826,"mtime":1616257858925,"results":"14","hashOfConfig":"12"},{"size":4028,"mtime":1616275365600,"results":"15","hashOfConfig":"12"},{"size":2249,"mtime":1611262660829,"results":"16","hashOfConfig":"12"},{"size":1995,"mtime":1616252183198,"results":"17","hashOfConfig":"12"},{"size":2224,"mtime":1616252192065,"results":"18","hashOfConfig":"12"},{"size":1100,"mtime":1616251644813,"results":"19","hashOfConfig":"12"},{"size":6319,"mtime":1616275065872,"results":"20","hashOfConfig":"12"},{"size":3726,"mtime":1616263971054,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"1jpgt8v",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/guillaumeroger/LeReacteur/Vinted/vinted-frontend/src/App.js",["43"],"// Import packages\nimport \"./App.css\";\nimport Header from \"./pages/Header\";\nimport HomePage from \"./pages/HomePage\";\nimport OfferPage from \"./pages/OfferPage\";\nimport SignupPage from \"./pages/SignupPage\";\nimport LoginPage from \"./pages/LoginPage\";\nimport PublishPage from \"./pages/PublishPage\";\nimport PaymentPage from \"./pages/PaymentPage\";\nimport { useState, useEffect } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { useDebounce } from \"use-debounce\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport Cookies from \"js-cookie\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\nconst axios = require(\"axios\");\nlibrary.add(faSearch);\n\nconst App = () => {\n  // Create states.\n  const [token, setToken] = useState();\n  const [offers, setOffers] = useState([]);\n  const [searchURL, setSearchURL] = useState(\"http://localhost:3150/offers\");\n  const [isLoading, setIsLoading] = useState(true);\n  const [debouncedSearchURL] = useDebounce(searchURL, 2000);\n\n  // Create a Stripe promise in order to allow a user to make a payment.\n  const stripePromise = loadStripe(process.env.REACT_APP_STRIPE_PUBLIC);\n\n  const fetchData = async () => {\n    // Create a new array, so that React update the state when setOffers is used.\n    const newOffers = [];\n    const serverResponseOffers = await axios.get(searchURL);\n    const serverResponseUsers = await axios.get(\"http://localhost:3150/users\");\n    const usersData = serverResponseUsers.data;\n\n    // Each offer that the server gives us must be pushed into the newOffers array before we set the state.\n    serverResponseOffers.data.forEach((item) => {\n      // Get the owner of the offer.\n      const owner = usersData.find((element) => item.owner === element._id);\n\n      // Get the owner name and picture.\n      const ownerName = owner.account.username;\n      const ownerPicture = owner.account.avatar;\n\n      // We're going to add the owner name and picture to each offer that we want to display.\n      const offerToPush = item;\n      offerToPush.ownerName = ownerName;\n      offerToPush.ownerPicture = ownerPicture;\n\n      newOffers.push(offerToPush);\n    });\n    setOffers(newOffers);\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, [debouncedSearchURL]);\n\n  useEffect(() => {\n    if (Cookies.get(\"vinted-token\")) {\n      setToken(Cookies.get(\"vinted-token\"));\n    } else {\n      setToken(false);\n    }\n  }, []);\n\n  return (\n    // Create the nav list containing every pages of the website.\n    <BrowserRouter>\n      <Header token={token} setToken={setToken} setSearchURL={setSearchURL} />\n\n      {/* Set the switch to display the chosen route. */}\n      <Switch>\n        <Route path=\"/offer/:id\">\n          <OfferPage />\n        </Route>\n        <Route path=\"/payment/:offerID/:offerName/:offerPrice/:offerOwner\">\n          {token ? (\n            <Elements stripe={stripePromise}>\n              <PaymentPage token={token} setSearchURL={setSearchURL} />\n            </Elements>\n          ) : (\n            <LoginPage />\n          )}\n        </Route>\n        <Route path={\"/user/signup\"}>\n          <SignupPage />\n        </Route>\n        <Route path={\"/user/login\"}>\n          <LoginPage setToken={setToken} />\n        </Route>\n        <Route path={\"/user/publish\"}>\n          <PublishPage token={token} />\n        </Route>\n        <Route path={\"/\"}>\n          {isLoading ? (\n            <p>Chargement en cours</p>\n          ) : (\n            <HomePage offers={offers} />\n          )}\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","/Users/guillaumeroger/LeReacteur/Vinted/vinted-frontend/src/index.js",[],"/Users/guillaumeroger/LeReacteur/Vinted/vinted-frontend/src/pages/HomePage-components/Offer.js",[],"/Users/guillaumeroger/LeReacteur/Vinted/vinted-frontend/src/pages/Header.js",[],"/Users/guillaumeroger/LeReacteur/Vinted/vinted-frontend/src/pages/OfferPage.js",["44","45"],"/Users/guillaumeroger/LeReacteur/Vinted/vinted-frontend/src/pages/SignupPage.js",[],"/Users/guillaumeroger/LeReacteur/Vinted/vinted-frontend/src/pages/LoginPage.js",[],"/Users/guillaumeroger/LeReacteur/Vinted/vinted-frontend/src/pages/HomePage.js",[],"/Users/guillaumeroger/LeReacteur/Vinted/vinted-frontend/src/pages/PublishPage.js",["46"],"/Users/guillaumeroger/LeReacteur/Vinted/vinted-frontend/src/pages/PaymentPage.js",[],{"ruleId":"47","severity":1,"message":"48","line":32,"column":9,"nodeType":"49","endLine":57,"endColumn":4},{"ruleId":"50","severity":1,"message":"51","line":18,"column":27,"nodeType":"52","messageId":"53","endLine":18,"endColumn":29},{"ruleId":"47","severity":1,"message":"54","line":34,"column":32,"nodeType":"55","endLine":34,"endColumn":34,"suggestions":"56"},{"ruleId":"57","severity":1,"message":"58","line":62,"column":9,"nodeType":"59","messageId":"60","endLine":62,"endColumn":28},"react-hooks/exhaustive-deps","The 'fetchData' function makes the dependencies of useEffect Hook (at line 61) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'fetchData' in its own useCallback() Hook.","VariableDeclarator","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["61"],"no-unused-vars","'handlePictureChange' is assigned a value but never used.","Identifier","unusedVar",{"desc":"62","fix":"63"},"Update the dependencies array to be: [fetchData]",{"range":"64","text":"65"},[1164,1166],"[fetchData]"]